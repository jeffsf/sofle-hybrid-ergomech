/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// main adopted v2 on 2024-07-24
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/sofle.h"

#include "urob-hrmods.h"

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3



#include "sofle_ergomech.physical"

// macOS shortcuts

#define NEXT_TAB  &kp RS(RG(RIGHT_BRACKET))
#define PREV_TAB  &kp LS(LG(LEFT_BRACKET))

#define MAGNIFY   &kp    LA(LG(N8))
#define INVERT    &kp LC(LA(LG(N8)))

// K_EJECT not supported under macOS
// https://zmk.dev/docs/codes

// Single kp fails, see https://github.com/zmkfirmware/zmk/issues/2383

// #define DISPLAY_SLEEP  LS(LC(K_EJECT))
// #define D_SLP  &kp DISPLAY_SLEEP

// ZMK_MACRO(zzz, bindings = <&kp Z &kp Z &kp Z>;)

ZMK_MACRO(d_slp, bindings = \
	  <&macro_press &kp LSHFT>, \
	  <&macro_press &kp LCTRL>, \
	  <&macro_tap &kp K_EJECT>, \
	  <&macro_release &kp LCTRL>, \
	  <&macro_release &kp LSHFT>; \
	  )



/* jmk -- Layer buttons: tap - sticky | double - lock | hold - layer on */

// https://zmk.dev/docs/behaviors/layers
// 	&mo n    -- momentary
// 	&lt n kc -- layer when held, key when tapped
// 	&to n    -- enable layer, disable others except default
// 	&tog n   -- enable layer until disabled

// https://zmk.dev/docs/behaviors/sticky-layer
//	&sl n -- releases on next key down

// /* Global settings */

// #define QUICK_TAP_MS 175

// &sk {  // sticky-key config
//     release-after-ms = <900>;  // release after 0.6s
//     quick-release;             // no double capitalization when rolling keys
// };

// &sl {  // sticky-layer config
//     ignore-modifiers;          // allow chording sticky mods & layers
// };

// &lt {  // layer-tap config
//     flavor = "balanced";
//     tapping-term-ms = <200>;
//     quick-tap-ms = <QUICK_TAP_MS>;
// };

// ZMK_TAP_DANCE(raise_dance,
//     tapping-term-ms = <200>;
//     bindings = <&sl RAISE>, <&to RAISE>;
// )
// ZMK_TAP_DANCE(lower_dance,
//     tapping-term-ms = <200>;
//     bindings = <&sl LOWER>, <&to LOWER>;
// )

// This isn't clear to me why the intermediate behavior is needed

// ZMK_HOLD_TAP(raise_3way,
//     flavor = "balanced";
//     tapping-term-ms = <200>;
//     quick-tap-ms = <175>;
//     bindings = <&mo RAISE &raise_dance>;
// )
// ZMK_HOLD_TAP(lower_3way,
//     flavor = "balanced";
//     tapping-term-ms = <200>;
//     quick-tap-ms = <175>;
//     bindings = <&mo LOWER &lower_dance>;
// )


/* https://zmk.dev/docs/behaviors/hold-tap#using-different-behavior-types-with-hold-taps */

/*     You cannot use behaviors that expect more than one parameter such as  */
/*     &bt and &rgb_ug with hold-taps, due to the limitations of the         */
/*     devicetree keymap format. One workaround is to create a macro that    */
/*     invokes those behaviors and use the macro as the hold or tap action.  */

ZMK_MACRO(mo_lower, bindings = <&mo LOWER>;)
ZMK_MACRO(sl_lower, bindings = <&sl LOWER>;)
ZMK_MACRO(to_lower, bindings = <&to LOWER>;)

ZMK_MACRO(mo_raise, bindings = <&mo RAISE>;)
ZMK_MACRO(sl_raise, bindings = <&sl RAISE>;)
ZMK_MACRO(to_raise, bindings = <&to RAISE>;)

ZMK_HOLD_TAP(layer_ht, tapping-term-ms = <200>; bindings = <&mo>, <&sl>;)

#define LHT(layer) &layer_ht layer layer

/* hold-tap(&mo, tap-dance(&sl, &to)) */

ZMK_HOLD_TAP(smart_raise, tapping-term-ms = <200>; quick-tap-ms = <175>; bindings = <&mo>, <&raise_td>;)
ZMK_HOLD_TAP(smart_lower, tapping-term-ms = <200>; quick-tap-ms = <175>; bindings = <&mo>, <&lower_td>;)

#define S_RAISE &smart_raise RAISE 0
#define S_LOWER &smart_lower LOWER 0

/ {
    bindings {

        raise_td: raise_td {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
	    tapping-term-ms = <200>;
            bindings = <&sl RAISE>, <&to RAISE>;
        };

        lower_td: lower_td {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
	    tapping-term-ms = <200>;
            bindings = <&sl LOWER>, <&to LOWER>;
        };
    };
};


/ {

    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            bindings = <
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
  &kp ESC      &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0      &kp BSPC
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
  &kp EQUAL    &kp Q         &kp W         &kp E         &kp R         &kp T                             &kp Y         &kp U         &kp I         &kp O         &kp P       &kp MINUS
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
  &kp TAB   &hml LCTRL A  &hml LALT S   &hml LCMD D   &hml LSHFT F     &kp G                             &kp H      &hmr RSHFT J  &hmr RCMD K   &hmr RALT L   &hmr RCTRL SEMI &kp SQT
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
  &kp GRAVE    &kp Z         &kp X         &kp C         &kp V         &kp B                             &kp N         &kp M        &kp COMMA      &kp DOT       &kp FSLH    &smart_shft
//├──────┤ ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭──────╮ ╭──────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯ ├──────┤
  &kp C_MUTE                &kp LGUI      &kp LALT      &kp LCTRL      S_LOWER     &kp RET  &kp SPACE    S_RAISE      &kp LBRC      &kp RBRC       &kp BSLH                  &kp ENTER
//╰──────╯               ╰─────────────┴─────────────┴─────────────┴─────────────╯ ╰──────╯ ╰──────╯ ╰─────────────┴─────────────┴─────────────┴─────────────╯               ╰──────╯
// Roller                                                                                                                                                                     Stick
//                                                                                               Right         Left           Up           Down
//                                                                                          ╭─────────────┬─────────────┬─────────────┬─────────────╮
                                                                                               &kp RIGHT   &kp UP_ARROW    &kp LEFT      &kp DOWN
//                                                                                          ╰─────────────┴─────────────┴─────────────┴─────────────╯
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN     &inc_dec_kp PG_UP PG_UP>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.

            bindings = <

//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
   &trans      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                            &kp F6        &kp F7        &kp F8        &kp F9        &kp F10     &kp F11
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
   &kp K_EJECT      &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0      &kp F12
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
   &trans     &kp EXCL       &kp AT       &kp HASH      &kp DLLR      &kp PRCNT                         &kp CARET     &kp AMPS     &kp ASTRK      &kp LPAR      &kp RPAR     &kp PIPE
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
   &trans     &kp EQUAL     &kp MINUS     &kp PLUS      &kp LBRC      &kp RBRC                          &kp LBKT      &kp RBKT      &kp SEMI      &kp COLON     &kp BSLH      &trans
//├──────┤ ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭──────╮ ╭──────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯ ├──────┤
   &trans                    &trans        &trans        &trans        &to BASE     &trans   &trans      &trans        &trans        &trans        &trans                     &kp A
//╰──────╯               ╰─────────────┴─────────────┴─────────────┴─────────────╯ ╰──────╯ ╰──────╯ ╰─────────────┴─────────────┴─────────────┴─────────────╯               ╰──────╯
// Roller                                                                                                                                                                     Stick
//                                                                                               Right         Left           Up           Down
//                                                                                          ╭─────────────┬─────────────┬─────────────┬─────────────╮
                                                                                                 &kp B         &kp C         &kp D         &kp E
//                                                                                          ╰─────────────┴─────────────┴─────────────┴─────────────╯

            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            bindings = <
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
  &bt BT_CLR &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                        &trans         &trans       &trans        &trans        &trans       &trans
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
   &trans      &kp INS      &kp PSCRN    &kp K_CMENU    &trans        &trans                            &kp PG_UP       &trans       &kp UP        &trans        &kp N0       &trans
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
   &trans      &kp LALT     &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                          &kp PG_DN      &kp LEFT     &kp DOWN      &kp RIGHT      &kp DEL     &kp BSPC
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
   &trans    &kp K_UNDO     &kp K_CUT    &kp K_COPY    &kp K_PASTE    &trans                             &trans         &trans       &trans        &trans        &trans       &trans
//├──────┤ ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭──────╮ ╭──────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯ ├──────┤
   &trans                    MAGNIFY      PREV_TAB      NEXT_TAB      &trans        &trans   &trans     &to BASE        &trans       &trans        &trans                     &kp A
//╰──────╯               ╰─────────────┴─────────────┴─────────────┴─────────────╯ ╰──────╯ ╰──────╯ ╰─────────────┴─────────────┴─────────────┴─────────────╯               ╰──────╯
// Roller                                                                                                                                                                     Stick
//                                                                                               Right         Left           Up           Down
//                                                                                          ╭─────────────┬─────────────┬─────────────┬─────────────╮
                                                                                                 &kp B         &kp C         &kp D        &kp E
//                                                                                          ╰─────────────┴─────────────┴─────────────┴─────────────╯

            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         |         | |      |      |      |       |      |       |       |
            //                    | BOOTLDR |         |         |         |  USB    | |  BT  |      |      |       | BOOTLDR     |

            label = "adjust";
            bindings = <
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
  &bt BT_CLR &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                        &none          &none         &none         &none         &none       &none
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
  &ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF &none          &none         &none         &none         &none       &none
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
   &none             &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none           &none          &none         &none         &none         &none       &none
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
   &none       &none          &none         &none         &none         &none                            &none          &none         &none         &none         &none       &none
//├──────┤ ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭──────╮ ╭──────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯ ├──────┤
   &none                   &bootloader      &none         &none         &none  &out OUT_USB &out OUT_BLE &none          &none          &none     &bootloader                  &kp A
//╰──────╯               ╰─────────────┴─────────────┴─────────────┴─────────────╯ ╰──────╯ ╰──────╯ ╰─────────────┴─────────────┴─────────────┴─────────────╯               ╰──────╯
// Roller                                                                                                                                                                     Stick
//                                                                                               Right         Left           Up           Down
//                                                                                          ╭─────────────┬─────────────┬─────────────┬─────────────╮
                                                                                                 &kp B         &kp C         &kp D         &kp E
//                                                                                          ╰─────────────┴─────────────┴─────────────┴─────────────╯

            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
